# Inspired by: https://blog.raftech.nl/automate-terraform-modules-versioning-with-github-actions-90f91351506a

name: Terraform Module PR
on:
  - pull_request
  - label
  - push

jobs:
  validate_formatting:
    name: Validate Terraform formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform Validate
        if: github.event_name == 'pull_request'
        run: terraform fmt -check=true -diff=true

      - name: Terraform Validate Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  check_semver_label:
    name: Check for semantic version label
    runs-on: ubuntu-latest
    steps:
      - uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          one_of: major,minor,patch
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  check_pull_request_type:
    name: Check for pull request type label
    runs-on: ubuntu-latest
    steps:
      - uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          one_of: bug,enhancement,documentation,security
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Render terraform docs inside the README.md and push changes back to PR branch
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: 'true'
